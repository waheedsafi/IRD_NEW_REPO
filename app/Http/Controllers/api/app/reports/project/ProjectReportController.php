<?php

namespace App\Http\Controllers\api\app\reports\project;

use App\Enums\StaffEnum;
use App\Http\Controllers\Controller;
use App\Traits\Address\AddressTrait;
use App\Traits\Report\PdfGeneratorTrait;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use ZipArchive;

class ProjectReportController extends Controller
{
    //
    use PdfGeneratorTrait, AddressTrait;


    public function generateForm(Request $request)
    {

        $languages = ['en', 'ps', 'fa'];
        $pdfFiles = [];

        $lang = 'en';
        // foreach ($languages as $lang) {
        $mpdf = $this->generatePdf();


        $this->setWatermark($mpdf);

        $data = $this->loadData($lang);
        // return "ngo.registeration.{$lang}.registeration";
        // Generate PDF content
        $footerHtml = '
        <div style="width:100%; text-align:center; font-size:10pt; color:#555; border-top:1px solid #999; padding-top:5px;">
            Date: _____________ <br>
            Generated by: Ahmad Ali
        </div>
    ';
        $this->setFooter($mpdf, $footerHtml);

        $this->pdfFilePart($mpdf, "reports.project.{$lang}.cover", $data);
        $this->setFooter($mpdf, '');
        $this->pdfFilePart($mpdf, "reports.project.{$lang}.project", ['data' => $data]);
        // $this->pdfFilePart($mpdf, "ngo.registeration.{$lang}.registeration", $data);
        $mpdf->SetProtection(['print']);

        // Store the PDF temporarily

        $fileName = "{$data['ngo_name']}_registration_{$lang}.pdf";
        $outputPath = storage_path("app/private/temp/");
        if (!is_dir($outputPath)) {
            mkdir($outputPath, 0755, true);
        }
        $filePath = $outputPath . $fileName;

        // return $filePath;
        $mpdf->Output($filePath, 'I'); // Save to file

        $pdfFiles[] = $filePath;
        // }

        // Create ZIP file
        $zipFile = storage_path('app/private/documents.zip');
        $zip = new ZipArchive();

        if ($zip->open($zipFile, ZipArchive::CREATE | ZipArchive::OVERWRITE) === true) {
            foreach ($pdfFiles as $file) {
                $zip->addFile($file, basename($file));
            }
            $zip->close();
        }

        // Delete individual PDFs after zipping
        foreach ($pdfFiles as $file) {
            unlink($file);
        }

        return response()->download($zipFile)->deleteFileAfterSend(true);
    }

    protected function  coverData($locale = 'en')
    {
        $data = [
            'ngo_name' => 'ngo name',
        ];
        return $data;
    }
    protected function loadData($locale = 'en')
    {


        $data = [
            'ngo_name' => 'ngo name',
            'column' => ['Name', 'Father', 'Last Name'],
            'tableData' => [
                ['name' => 'Ahmad', 'father' => 'Ali', 'last_name' => 'Khan'],
                ['name' => 'Mohammad', 'father' => 'Yasin', 'last_name' => 'Ahmadi'],
                ['name' => 'Said', 'father' => 'Gul', 'last_name' => 'Azizi'],
            ],
        ];
        // $data = [
        //     'register_number' => $ngo->registration_no,
        //     'date_of_sign' => '................',
        //     'ngo_name' =>  $ngo->name,
        //     'abbr' => $ngo->abbr,
        //     'contact' => $ngo->contact,
        //     'address' => $ngo->area . ',' . $ngo->district . ',' . $ngo->province . ',' . $ngo->country,
        //     'director' => $director->name . " " . $director->last_name,
        //     'director_address' =>  $director->area . ',' . $director->district . ',' . $director->province . ',' . $director->country,
        //     'email' => $ngo->email,
        //     'establishment_date' => $ngo->date_of_establishment,
        //     'place_of_establishment' => $ngo->country,
        //     'ministry_economy_no' => $ngo->moe_registration_no,
        //     'general_objective' => $ngo->general_objective,
        //     'afganistan_objective' => $ngo->objective,
        //     'mission' => $ngo->mission,
        //     'vission' => $ngo->vision,
        //     'ird_director' => $irdDirector->name,
        // ];


        return $data;
    }
}
